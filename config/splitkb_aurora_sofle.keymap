/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

// Layer Definitions

#define COLEMAK 0
#define QWERTY 1
#define LOWER 2
#define RAISE 3
#define NUMPAD 4
#define RGB 3

// Uncomment this block if using RGB

&led_strip {
    // chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs

    chain-length = <29>; // Uncomment if using only per-key LEDs.
};

&mt { tapping-term-ms = <400>; };

/ {
    macros {
        rgb_mo: rgb_mo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&none>;

            label = "RGB_MO";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Colemak {
            bindings = <
&kp ESC              &kp N1  &kp N2     &kp N3    &kp N4    &kp N5                         &kp N6  &kp N7    &kp N8     &kp N9     &kp N0            &lt 3 RBKT
&kp TAB              &kp Q   &kp W      &kp F     &kp P     &kp B                          &kp J   &kp L     &kp U      &kp Y      &kp LEFT_BRACKET  &kp APOS
&kp LCTRL            &kp A   &kp R      &kp S     &kp T     &kp G                          &kp M   &kp N     &kp E      &kp I      &kp O             &kp SEMICOLON
&mt LEFT_SHIFT HOME  &kp Z   &kp X      &kp C     &kp D     &kp V   &kp LBKT     &kp RBKT  &kp K   &kp H     &kp COMMA  &kp DOT    &kp SLASH         &mt RIGHT_SHIFT END
                             &kp LCTRL  &kp LGUI  &kp LALT  &mo 2   &kp SPACE    &kp RET   &mo 1   &kp BSPC  &kp RALT   &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOL_DN C_VOL_UP>,
                <&inc_dec_kp 0 0>;

            label = "Colemak";
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans          &trans  &trans  &trans                &trans      &trans                        &trans      &trans      &trans               &trans               &trans     &kp EQUAL
&kp GRAVE       &none   &none   &kp NON_US_BACKSLASH  &kp RA(N7)  &kp RA(N8)                    &kp RA(N9)  &kp RA(N0)  &kp RS(NON_US_BSLH)  &kp RA(NON_US_BSLH)  &trans     &kp NON_US_HASH
&none           &none   &none   &none                 &none       &kp RS(N8)                    &kp RS(N9)  &kp LEFT    &kp DOWN             &kp UP               &kp RIGHT  &kp RS(N2)
&kp LEFT_SHIFT  &none   &none   &none                 &none       &none       &trans    &trans  &none       &none       &none                &none                &none      &kp RIGHT_SHIFT
                        &trans  &trans                &trans      &trans      &trans    &trans  &trans      &trans      &trans               &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_DN C_VOL_UP>;
        };

        Lower {
            bindings = <
&trans             &trans  &trans  &trans   &trans   &trans                     &trans        &trans       &trans           &trans         &trans         &trans
&trans             &trans  &trans  &trans   &trans   &trans                     &kp KP_MINUS  &kp KP_PLUS  &kp KP_MULTIPLY  &kp KP_DIVIDE  &kp RA(MINUS)  &trans
&kp F1             &kp F2  &kp F3  &kp F4   &kp F5   &kp F6                     &kp DOT       &kp N1       &kp N2           &kp N3         &kp N4         &kp N5
&mt LEFT_SHIFT F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12  &trans    &trans  &kp COMMA     &kp N6       &kp N7           &kp N8         &kp N9         &mt RIGHT_SHIFT N0
                           &trans  &trans   &trans   &trans   &trans    &trans  &trans        &trans       &trans           &trans
            >;

            sensor-bindings =
                <&inc_dec_kp LC(X) LC(A)>,
                <&inc_dec_kp LC(X) LC(A)>;
        };

        config {
            bindings = <
&bt BT_CLR    &bt BT_SEL 0      &bt BT_SEL 1       &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4                     &rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_EFF  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &trans
&out OUT_TOG  &bt BT_DISC 0     &bt BT_DISC 1      &bt BT_DISC 2  &bt BT_DISC 3  &bt BT_DISC 4                    &trans           &trans           &trans           &trans           &rgb_ug RGB_SAD  &rgb_ug RGB_SAI
&trans        &trans            &trans             &trans         &trans         &trans                           &trans           &trans           &trans           &trans           &rgb_ug RGB_BRD  &rgb_ug RGB_BRI
&trans        &ext_power EP_ON  &ext_power EP_OFF  &trans         &trans         &trans         &trans    &trans  &trans           &trans           &trans           &trans           &rgb_ug RGB_SPD  &rgb_ug RGB_SPI
                                &none              &trans         &trans         &trans         &trans    &trans  &trans           &trans           &trans           &trans
            >;

            label = "config";
        };
    };
};
